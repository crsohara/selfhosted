---

- name: Ensure ovpn dir exists | file
  file:
    path: "{{ dir.docker }}/ovpn"
    state: directory

- name: Ensure wg_internal dir exists | file
  file:
    path: "{{ dir.docker }}/wg_internal"
    state: directory

- name: Ensure qbit dir exists | file
  file:
    path: "{{ dir.docker }}/qbittorrent"
    state: directory

- name: ovpn auth | template
  template:
    src: vpn.auth
    dest: "{{ dir.docker }}/ovpn/"
  notify: reboot ovpn

- name: wg_internal conf | template
  template:
    src: wg0.conf
    dest: "{{ dir.docker }}/wg_internal/"
  notify:
    - reboot wg_internal
    - reboot qbit

- name: qBit config | template
  template:
    src: qBittorrent.conf
    dest: "{{ dir.docker }}/qbittorrent/"
  notify: reboot qbit

- name: qBit categories.json | template
  template:
    src: categories.json
    dest: "{{ dir.docker }}/qbittorrent/"
  notify: reboot qbit

- name: qBit slack script | file
  copy:
    src: slack-on-complete.sh
    dest: "{{ dir.docker }}/qbittorrent/"
  notify: reboot qbit

- name: Vpn qBittorrent

  docker_compose:
    project_name: nansi_openvpn_qbit
    pull: yes

    definition:
      version: '3.4'

      volumes:
        qbit_config:
          driver: local

      services:
        wg_internal:
          image: linuxserver/wireguard:latest
          container_name: nansi_wg_internal
          environment:
            - PGID=1000
            - PUID=1000
            - TZ={{ tz }}
          sysctls:
            - net.ipv4.conf.all.src_valid_mark=1
          cap_add:
            - NET_ADMIN
            - SYS_MODULE
          restart: unless-stopped
          volumes:
            - "{{ dir.docker }}/wg_internal:/config"
          ports:
            - 8080:8080 # for lan access
          labels:
            - traefik.enable=true
            - traefik.http.routers.qbit.tls.certresolver=tmp
            - 'traefik.http.routers.qbit.rule=Host(`qbit.{{ tld.home }}`) && !Path(`/service-worker.js`)'
            - traefik.http.routers.qbit.middlewares=authelia@docker
            - traefik.http.routers.qbit.service=qbit
            - traefik.http.services.qbit.loadbalancer.server.port=8080
          networks:
            - traefik

        qbit:
          image: linuxserver/qbittorrent:latest
          container_name: nansi_qbit
          environment:
            - PGID=1000
            - PUID=1000
            - DOCKER_MODS=arafatamim/linuxserver-io-mod-vuetorrent:latest
            - TZ={{ tz }}
          restart: unless-stopped
          network_mode: service:wg_internal
          depends_on:
            - wg_internal
          volumes:
            - "{{ dir.storage }}/downloads:/downloads"
            - "{{ dir.storage }}:/storage"
            - "{{ dir.docker }}/qbittorrent/qBittorrent.conf:/config/qBittorrent/qBittorrent.conf"
            - "{{ dir.docker }}/qbittorrent/categories.json:/config/qBittorrent/categories.json"
            - "{{ dir.docker }}/qbittorrent/slack-on-complete.sh:/slack-on-complete.sh"
            - qbit_config:/config

      networks:
        traefik:
          external:
            name: traefik
